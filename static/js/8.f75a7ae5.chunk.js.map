{"version":3,"sources":["components/ModalTodo.js","components/TodoList.js","actions/todoActions.js"],"names":["ModalTodo","state","modal","text","error","onChange","input","e","_this","setState","Object","defineProperty","target","value","onSubmit","id","preventDefault","length","props","newValue","modalText","objectSpread","toggle","prevState","_this2","this","react_default","a","createElement","Fragment","Button","color","onClick","Modal","isOpen","className","ModalHeader","Alert","ModalBody","Form","event","FormGroup","Input","type","name","placeholder","Component","TodoList","test","addTodo","textInput","onDelete","deleteTodo","onCross","crossTodo","showCrossedTodo","showAllTodo","showActiveTodo","todo","disabled","map","v","i","show","key","concat","crossed","role","aria-label","components_ModalTodo","handleActive","handleCompleted","handleShowAll","connect","dispatch","ADD_TODO","payload","DELETE_TODO","editTodo","EDIT_TODO","closeTodo","CLOSE_TODO","NEWVALUE_TODO","CROSS_TODO","SHOWALL_TODO","COMPLETED_TODO","ACTIVE_TODO"],"mappings":"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","file":"static/js/8.f75a7ae5.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {Button, Modal, ModalHeader, ModalBody, Input, Form, FormGroup,Alert} from 'reactstrap';\r\n\r\nclass ModalTodo extends Component {\r\n\r\n\r\n    state = {\r\n      modal: false,\r\n      text:'',\r\n      error:null\r\n    };\r\n\r\n  onChange = (input) => e => {\r\n    this.setState({[input]: e.target.value})\r\n  };\r\n\r\n  onSubmit =(id,e) => {\r\n    e.preventDefault();\r\n    if (this.state.text.length>20){\r\n      return this.setState({error:'Your task is too long, 20 letters are max'})\r\n    }\r\n\r\n    this.props.newValue(this.state.text,id);\r\n    e.target.modalText.value = '';\r\n    this.setState({...this.state, text: ''})\r\n    this.toggle()\r\n  };\r\n\r\n  toggle=()=>{\r\n    this.setState(prevState => ({\r\n      modal: !prevState.modal\r\n    }));\r\n  };\r\n\r\n  render() {\r\n\r\n    return (\r\n      <>\r\n        <Button color=\"primary\" onClick={this.toggle}>Edit</Button>\r\n        <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\r\n          <ModalHeader className='text-dark' toggle={this.toggle}>Edit the task</ModalHeader>\r\n          {this.state.error? <Alert color='danger' >{this.state.error}</Alert>:null}\r\n          <ModalBody>\r\n            <Form onSubmit={(event)=>this.onSubmit(this.props.id,event)}>\r\n              <FormGroup>\r\n            <Input type='text' name='modalText' onChange={this.onChange(`text`)}\r\n            placeholder={this.props.value}\r\n            />\r\n              </FormGroup>\r\n\r\n              <FormGroup className=''>\r\n                <div className='btn-group  col-12 p-0'>\r\n            <Button type='submit' color=\"primary\" >Save</Button>\r\n            <Button  color=\"secondary\" onClick={this.toggle}>Cancel</Button>\r\n                </div>\r\n              </FormGroup>\r\n\r\n            </Form>\r\n          </ModalBody>\r\n\r\n\r\n\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n  export default ModalTodo;\r\n","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux'\r\nimport {Alert} from 'reactstrap'\r\nimport {\r\n  addTodo,\r\n  closeTodo,\r\n  crossTodo,\r\n  deleteTodo,\r\n  editTodo,\r\n  newValue,\r\n  showActiveTodo, showAllTodo,\r\n  showCrossedTodo\r\n} from '../actions/todoActions'\r\nimport './TodoList.css'\r\nimport ModalTodo from \"./ModalTodo\";\r\n\r\nclass TodoList extends Component {\r\n  state = {\r\n    text: '',\r\n    test: 'Dont touch',\r\n\r\n    error: null\r\n  };\r\n\r\n  onChange = (input) => e => {\r\n    this.setState({[input]: e.target.value})\r\n  };\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (this.state.text.length > 20) {\r\n\r\n      return this.setState({error: 'Your task is too long, 20 letters are max'})\r\n    }\r\n\r\n    this.props.addTodo(this.state.text);\r\n    this.setState({...this.state, text: '', error: false});\r\n    e.target.textInput.value = '';\r\n\r\n  };\r\n\r\n  onDelete = (id) => (e) => {\r\n\r\n    this.props.deleteTodo(id);\r\n\r\n  };\r\n\r\n  onCross = (id) => (e) => {\r\n    this.props.crossTodo(id)\r\n  };\r\n\r\n  handleCompleted() {\r\n\r\n    this.props.showCrossedTodo()\r\n  }\r\n\r\n  handleShowAll() {\r\n\r\n    this.props.showAllTodo()\r\n  }\r\n\r\n  handleActive() {\r\n\r\n    this.props.showActiveTodo()\r\n  }\r\n\r\n  render() {\r\n    const {todo} = this.props;\r\n\r\n    return (\r\n      <div className='bg-todo'>\r\n      <div className='container col-12 col-md-6 p-0 '>\r\n        <div className='container-fluid pt-4 text-center'>\r\n          <p>If you have ReduxDevTools you can check it</p>\r\n\r\n          <form onSubmit={this.onSubmit} className='text-center'>\r\n            <label>Automedon list</label>\r\n\r\n            <div className=\"container input-group justify-content-center p-0  \">\r\n              <input\r\n                className=\"form-control col-12  col-md-8\"\r\n                name=\"textInput\"\r\n                type=\"text\"\r\n                placeholder=\"Add task\"\r\n                onChange={this.onChange('text')}\r\n              />\r\n              <button\r\n\r\n\r\n                className={`btn btn-info  col-12  col-md-4 `}\r\n                disabled={this.state.text.length === 0}\r\n\r\n                type=\"submit\"\r\n              >\r\n                Add your task\r\n              </button>\r\n            </div>\r\n          </form>\r\n          {this.state.error ? <Alert color='danger'>{this.state.error}</Alert> : null}\r\n          {todo.length ?\r\n            <div className='container'>\r\n\r\n              <ul className='list-group  '>\r\n                {todo.map((v, i) => (v.show ? (<li\r\n\r\n                  className='d-inline-flex align-items-center list-group-item  text-dark p-0 border-0  justify-content-between row'\r\n                  key={v.id}>\r\n                  <div\r\n                    className={`d-inline-flex pl-1 pt-2 pb-2 col-12  col-md-8 ${v.crossed ? 'text-success' : 'text-danger'}`}\r\n                    onClick={this.onCross(v.id)}\r\n                  >\r\n\r\n                    {v.crossed ?\r\n                      `  ${i + 1}. ${v.text}  done`\r\n                      : `  ${i + 1}. ${v.text}`}\r\n                  </div>\r\n\r\n\r\n                  <div className=\"btn-group col-12  col-md-4 p-0\" role=\"group\" aria-label=\"Basic example\">\r\n                    <ModalTodo value={v.text} id={v.id} newValue={this.props.newValue}/>\r\n                    <button type=\"button\" className=\"btn btn-danger\" onClick={this.onDelete(v.id)}>Delete</button>\r\n                  </div>\r\n\r\n\r\n                </li>) : null))}\r\n              </ul>\r\n            </div> : null}\r\n          <div>\r\n            {todo.length ? <div className='col-12 btn-group mt-4 p-0'>\r\n              <button className=\"btn btn-secondary\" onClick={() => this.handleActive()}>Active</button>\r\n              <button className=\"btn btn-secondary\" onClick={() => this.handleCompleted()}>Completed</button>\r\n              <button className=\"btn btn-secondary\" onClick={() => this.handleShowAll()}>Show all</button>\r\n            </div> : null}\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = state => {\r\n  return {\r\n    todo: state.todo\r\n  }\r\n};\r\nexport default connect(mapDispatchToProps, {addTodo, deleteTodo, editTodo, closeTodo, newValue, crossTodo, showAllTodo, showCrossedTodo, showActiveTodo})(TodoList);\r\n","import {\r\n  ACTIVE_TODO,\r\n  ADD_TODO,\r\n  CLOSE_TODO, COMPLETED_TODO,\r\n  CROSS_TODO,\r\n  DELETE_TODO,\r\n  EDIT_TODO,\r\n  NEWVALUE_TODO,\r\n  SHOWALL_TODO\r\n} from \"./types\";\r\n\r\nexport const addTodo=(text)=>dispatch=>{\r\n    dispatch({\r\n        type:ADD_TODO,\r\n        payload:{text}\r\n    })\r\n};\r\nexport const newValue=(text,id)=>dispatch=>{\r\n    dispatch({\r\n        type:NEWVALUE_TODO,\r\n        payload:{id,text}\r\n    })\r\n};\r\nexport const editTodo=id=>(dispatch)=>{\r\n    dispatch({\r\n        type:EDIT_TODO,\r\n        payload:{\r\n            id\r\n        }\r\n    })\r\n};\r\nexport const crossTodo=id=>(dispatch)=>{\r\n  dispatch({\r\n    type:CROSS_TODO,\r\n    payload:{\r\n      id\r\n    }\r\n  })\r\n};\r\nexport const closeTodo=id=>(dispatch)=>{\r\n    dispatch({\r\n        type:CLOSE_TODO,\r\n        payload:{\r\n            id\r\n        }\r\n    })\r\n};\r\nexport const deleteTodo=id=>(dispatch)=>{\r\n    dispatch({\r\n        type:DELETE_TODO,\r\n        payload:{\r\n            id\r\n        }\r\n    })\r\n};\r\n\r\nexport const showAllTodo=()=>(dispatch)=>{\r\n  dispatch({\r\n    type:SHOWALL_TODO,\r\n\r\n  })\r\n};\r\nexport const showCrossedTodo=()=>(dispatch)=>{\r\n  dispatch({\r\n    type:COMPLETED_TODO,\r\n\r\n  })\r\n};\r\nexport const showActiveTodo=()=>(dispatch)=>{\r\n  dispatch({\r\n    type:ACTIVE_TODO,\r\n\r\n  })\r\n};\r\n\r\n"],"sourceRoot":""}