{"version":3,"sources":["actions/types.js","App.js","reducers/wheatherReducer.js","reducers/todoReducer.js","reducers/index.js","serviceWorker.js","index.js","store.js"],"names":["__webpack_require__","d","__webpack_exports__","ADD_TODO","EDIT_TODO","CLOSE_TODO","NEWVALUE_TODO","CROSS_TODO","ACTIVE_TODO","COMPLETED_TODO","SHOWALL_TODO","DELETE_TODO","REQUEST_WEATHER","WheatherApp","React","lazy","Promise","all","e","then","bind","MainPage","TodoList","NoMatch","LandingPage1","App","react_default","a","createElement","react_router_dom","react","fallback","className","react_router","path","exact","component","Component","initState","rootReducer","combineReducers","todo","state","arguments","length","undefined","action","type","concat","Object","toConsumableArray","id","uuid4","text","payload","show","crossed","map","v","objectSpread","trim","filter","i","arr","weather","Boolean","window","location","hostname","match","store","preloadedState","middlewares","thunkMiddleware","enhancers","applyMiddleware","apply","composedEnhancers","composeWithDevTools","createStore","configureStore","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d10138d7.chunk.js","sourcesContent":["export const ADD_TODO='ADD_TODO';\r\nexport const EDIT_TODO='EDIT_TODO';\r\nexport const CLOSE_TODO='CLOSE_TODO';\r\nexport const NEWVALUE_TODO='NEWVALUE_TODO';\r\nexport const CROSS_TODO='CROSS_TODO';\r\nexport const ACTIVE_TODO='ACTIVE_TODO';\r\nexport const COMPLETED_TODO='COMPLETED_TODO';\r\nexport const SHOWALL_TODO='SHOWALL_TODO';\r\nexport const DELETE_TODO='DELETE_TODO';\r\nexport const REQUEST_WEATHER='REQUEST_WEATHER';","import React, { Component,Suspense } from 'react';\r\n\r\nimport { BrowserRouter as Router,   Route, Switch } from \"react-router-dom\";\r\nimport './App.css';\r\n\r\nconst WheatherApp = React.lazy(() => import(\"./components/WheatherApp\"));\r\nconst MainPage = React.lazy(() => import(\"./components/MainPage\"));\r\nconst TodoList = React.lazy(() => import(\"./components/TodoList\"));\r\nconst NoMatch = React.lazy(() => import(\"./components/NoMatch\"));\r\nconst LandingPage1 = React.lazy(() => import(\"./components/LandingPage1\"));\r\n\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n\r\n            <Router>\r\n              <Suspense fallback={<div className='loader'>Loading...\r\n\r\n              </div>}>\r\n              <Switch>\r\n              <Route path=\"/\" exact component={MainPage} />\r\n                <Route path=\"/Portfolio2\" component={MainPage} />\r\n              <Route path=\"/todolist\" component={TodoList} />\r\n              <Route path=\"/landingpage1\" component={LandingPage1} />\r\n                <Route path=\"/weatherApp\" component={WheatherApp} />\r\n                <Route component={NoMatch} />\r\n              </Switch>\r\n            </Suspense>\r\n            </Router>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","\r\nimport {\r\n  REQUEST_WEATHER\r\n} from \"../actions/types\";\r\nconst initState = {};\r\nexport default function (state=initState,action) {\r\n  switch (action.type) {\r\n    case REQUEST_WEATHER:\r\n      return {...state,...action.payload};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n\r\n}","import uuid4 from \"uuid4\";\r\nimport {\r\n    ACTIVE_TODO,\r\n    ADD_TODO,\r\n\r\n    COMPLETED_TODO,\r\n    CROSS_TODO,\r\n    DELETE_TODO,\r\n    EDIT_TODO, NEWVALUE_TODO,\r\n    SHOWALL_TODO\r\n} from \"../actions/types\";\r\nconst initState =[];\r\nexport default function (state=initState,action) {\r\n    switch (action.type) {\r\n        case ADD_TODO:\r\n            return [\r\n                ...state,\r\n                {\r\n                    id: uuid4(),\r\n                    text: action.payload.text,\r\n                    show:true,\r\n                    crossed:false\r\n                }\r\n            ];\r\n        case EDIT_TODO:\r\n            return [...state].map(v =>\r\n                v.id === action.payload.id\r\n                    ? {\r\n                        ...v,\r\n\r\n                    }\r\n                    : v\r\n            );\r\n\r\n        case NEWVALUE_TODO:\r\n            if (action.payload.text.trim() === \"\") {\r\n                return state.filter(todo => todo.id !== action.payload.id);\r\n            }\r\n            return [...state].map(v =>\r\n                v.id === action.payload.id\r\n                    ? {\r\n                        ...v,\r\n                        text: action.payload.text,\r\n                    crossed:false\r\n                    }\r\n                    : v\r\n            );\r\n      case CROSS_TODO:\r\n\r\n            return [...state].map((v) =>\r\n                v.id === action.payload.id\r\n                    ? {\r\n                        ...v,\r\n                        crossed:!v.crossed\r\n                    }\r\n                    : v\r\n            );\r\n        case ACTIVE_TODO:\r\n            return [...state].map((v, i, arr) =>\r\n                v.crossed===true?{\r\n                    ...v,show:false\r\n                }:{...v,show:true});\r\n        case COMPLETED_TODO:\r\n            return [...state].map((v, i, arr) =>\r\n                v.crossed===true?{\r\n                    ...v,show:true\r\n                }:{...v,show:false});\r\n        case SHOWALL_TODO:\r\n            return [...state].map((v, i, arr) =>v?{...v,show:true}:v);\r\n\r\n        case DELETE_TODO:\r\n            return state.filter(todo => todo.id !== action.payload.id);\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { combineReducers } from 'redux'\r\nimport wheatherReducer from './wheatherReducer'\r\nimport todoReducer from './todoReducer'\r\n\r\n// Use ES6 object literal shorthand syntax to define the object shape\r\nexport const rootReducer = combineReducers({\r\n    todo:todoReducer,\r\n    weather:wheatherReducer\r\n})","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport './index.css';\nimport App from './App';\nimport configureStore from './store'\nimport * as serviceWorker from './serviceWorker';\n\nconst store = configureStore();\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { applyMiddleware, createStore } from 'redux'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport {rootReducer} from './reducers/index'\r\n\r\nexport default function configureStore(preloadedState) {\r\n    const middlewares = [ thunkMiddleware];\r\n    const middlewareEnhancer = applyMiddleware(...middlewares);\r\n\r\n    const enhancers = [middlewareEnhancer];\r\n    const composedEnhancers = composeWithDevTools(...enhancers);\r\n\r\n    return createStore(rootReducer, preloadedState, composedEnhancers)\r\n}"],"sourceRoot":""}